{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNtKEwijVe7ZatJ+OmQfhPl",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/HerGuzmanMoratto/ETB-Telecom-Data-Warehouse-Project/blob/main/Data_Warehouse_Sysntetic_Data.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Billing records data"
      ],
      "metadata": {
        "id": "L0DogSo9aM9r"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Xazky9uUVoe3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "outputId": "8d4afcc9-3066-41a5-d6f7-332a2c5ca0be"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "INSERT INTO BillingRecord (BillID, CustomerID, PlanID, TimeID, AmountDue, AmountPaid, PaymentStatus) VALUES\n",
            "(574, 48, 3, 10, 40.00, 40.00, 'Paid'),\n",
            "(277, 24, 2, 1, 25.00, 0.00, 'Late'),\n",
            "(577, 49, 1, 1, 10.00, 10.00, 'Paid'),\n",
            "(162, 14, 1, 6, 10.00, 10.00, 'Paid'),\n",
            "(544, 46, 3, 4, 40.00, 0.00, 'Late'),\n",
            "(563, 47, 3, 11, 40.00, 30.50, 'Pending'),\n",
            "(296, 25, 3, 8, 40.00, 40.00, 'Paid'),\n",
            "(104, 9, 3, 8, 40.00, 40.00, 'Paid'),\n",
            "(421, 36, 2, 1, 25.00, 25.00, 'Paid'),\n",
            "(155, 13, 2, 11, 25.00, 0.00, 'Late'),\n",
            "(342, 29, 1, 6, 10.00, 7.37, 'Pending'),\n",
            "(330, 28, 1, 6, 10.00, 10.00, 'Paid'),\n",
            "(27, 3, 2, 3, 25.00, 25.00, 'Paid'),\n",
            "(30, 3, 2, 6, 25.00, 16.19, 'Pending'),\n",
            "(496, 42, 3, 4, 40.00, 40.00, 'Paid'),\n",
            "(198, 17, 1, 6, 10.00, 7.14, 'Pending'),\n",
            "(474, 40, 2, 6, 25.00, 0.00, 'Late'),\n",
            "(186, 16, 1, 6, 10.00, 0.00, 'Late'),\n",
            "(172, 15, 2, 4, 25.00, 25.00, 'Paid'),\n",
            "(113, 10, 3, 5, 40.00, 25.77, 'Pending'),\n",
            "(73, 7, 3, 1, 40.00, 0.00, 'Late'),\n",
            "(590, 50, 2, 2, 25.00, 25.00, 'Paid'),\n",
            "(523, 44, 3, 7, 40.00, 31.34, 'Pending'),\n",
            "(58, 5, 1, 10, 10.00, 10.00, 'Paid'),\n",
            "(560, 47, 3, 8, 40.00, 0.00, 'Late'),\n",
            "(504, 42, 3, 12, 40.00, 0.00, 'Late'),\n",
            "(311, 26, 3, 11, 40.00, 21.53, 'Pending'),\n",
            "(391, 33, 1, 7, 10.00, 4.65, 'Pending'),\n",
            "(374, 32, 2, 2, 25.00, 25.00, 'Paid'),\n",
            "(298, 25, 3, 10, 40.00, 25.82, 'Pending'),\n",
            "(592, 50, 2, 4, 25.00, 18.99, 'Pending'),\n",
            "(140, 12, 3, 8, 40.00, 40.00, 'Paid'),\n",
            "(510, 43, 1, 6, 10.00, 0.00, 'Late'),\n",
            "(583, 49, 1, 7, 10.00, 5.42, 'Pending'),\n",
            "(112, 10, 3, 4, 40.00, 40.00, 'Paid'),\n",
            "(570, 48, 3, 6, 40.00, 22.24, 'Pending'),\n",
            "(166, 14, 1, 10, 10.00, 10.00, 'Paid'),\n",
            "(26, 3, 2, 2, 25.00, 0.00, 'Late'),\n",
            "(249, 21, 3, 9, 40.00, 40.00, 'Paid'),\n",
            "(85, 8, 1, 1, 10.00, 3.74, 'Pending'),\n",
            "(250, 21, 3, 10, 40.00, 18.00, 'Pending'),\n",
            "(442, 37, 2, 10, 25.00, 25.00, 'Paid'),\n",
            "(275, 23, 3, 11, 40.00, 40.00, 'Paid'),\n",
            "(285, 24, 2, 9, 25.00, 25.00, 'Paid'),\n",
            "(60, 5, 1, 12, 10.00, 10.00, 'Paid'),\n",
            "(219, 19, 2, 3, 25.00, 25.00, 'Paid'),\n",
            "(444, 37, 2, 12, 25.00, 0.00, 'Late'),\n",
            "(212, 18, 2, 8, 25.00, 0.00, 'Late'),\n",
            "(579, 49, 1, 3, 10.00, 10.00, 'Paid'),\n",
            "(526, 44, 3, 10, 40.00, 0.00, 'Late');\n",
            "\n",
            "\n",
            "INSERT INTO BillingRecord (BillID, CustomerID, PlanID, TimeID, AmountDue, AmountPaid, PaymentStatus) VALUES\n",
            "(23, 2, 2, 11, 25.00, 25.00, 'Paid'),\n",
            "(205, 18, 2, 1, 25.00, 13.26, 'Pending'),\n",
            "(479, 40, 2, 11, 25.00, 0.00, 'Late'),\n",
            "(226, 19, 2, 10, 25.00, 25.00, 'Paid'),\n",
            "(460, 39, 3, 4, 40.00, 25.63, 'Pending'),\n",
            "(451, 38, 2, 7, 25.00, 25.00, 'Paid'),\n",
            "(398, 34, 2, 2, 25.00, 0.00, 'Late'),\n",
            "(528, 44, 3, 12, 40.00, 0.00, 'Late'),\n",
            "(390, 33, 1, 6, 10.00, 0.00, 'Late'),\n",
            "(287, 24, 2, 11, 25.00, 25.00, 'Paid'),\n",
            "(331, 28, 1, 7, 10.00, 4.26, 'Pending'),\n",
            "(566, 48, 3, 2, 40.00, 0.00, 'Late'),\n",
            "(103, 9, 3, 7, 40.00, 40.00, 'Paid'),\n",
            "(406, 34, 2, 10, 25.00, 0.00, 'Late'),\n",
            "(59, 5, 1, 11, 10.00, 0.00, 'Late'),\n",
            "(127, 11, 2, 7, 25.00, 25.00, 'Paid'),\n",
            "(383, 32, 2, 11, 25.00, 25.00, 'Paid'),\n",
            "(396, 33, 1, 12, 10.00, 10.00, 'Paid'),\n",
            "(561, 47, 3, 9, 40.00, 40.00, 'Paid'),\n",
            "(187, 16, 1, 7, 10.00, 10.00, 'Paid'),\n",
            "(28, 3, 2, 4, 25.00, 25.00, 'Paid'),\n",
            "(167, 14, 1, 11, 10.00, 10.00, 'Paid'),\n",
            "(25, 3, 2, 1, 25.00, 25.00, 'Paid'),\n",
            "(324, 27, 2, 12, 25.00, 16.57, 'Pending'),\n",
            "(369, 31, 1, 9, 10.00, 3.53, 'Pending'),\n",
            "(281, 24, 2, 5, 25.00, 25.00, 'Paid'),\n",
            "(96, 8, 1, 12, 10.00, 0.00, 'Late'),\n",
            "(600, 50, 2, 12, 25.00, 25.00, 'Paid'),\n",
            "(240, 20, 2, 12, 25.00, 14.16, 'Pending'),\n",
            "(598, 50, 2, 10, 25.00, 25.00, 'Paid'),\n",
            "(261, 22, 3, 9, 40.00, 40.00, 'Paid'),\n",
            "(92, 8, 1, 8, 10.00, 10.00, 'Paid'),\n",
            "(229, 20, 2, 1, 25.00, 25.00, 'Paid'),\n",
            "(401, 34, 2, 5, 25.00, 0.00, 'Late'),\n",
            "(251, 21, 3, 11, 40.00, 0.00, 'Late'),\n",
            "(512, 43, 1, 8, 10.00, 10.00, 'Paid'),\n",
            "(156, 13, 2, 12, 25.00, 0.00, 'Late'),\n",
            "(90, 8, 1, 6, 10.00, 10.00, 'Paid'),\n",
            "(6, 1, 2, 6, 25.00, 25.00, 'Paid'),\n",
            "(183, 16, 1, 3, 10.00, 10.00, 'Paid'),\n",
            "(154, 13, 2, 10, 25.00, 25.00, 'Paid'),\n",
            "(10, 1, 2, 10, 25.00, 25.00, 'Paid'),\n",
            "(470, 40, 2, 2, 25.00, 25.00, 'Paid'),\n",
            "(508, 43, 1, 4, 10.00, 0.00, 'Late'),\n",
            "(482, 41, 2, 2, 25.00, 25.00, 'Paid'),\n",
            "(481, 41, 2, 1, 25.00, 0.00, 'Late'),\n",
            "(307, 26, 3, 7, 40.00, 0.00, 'Late'),\n",
            "(304, 26, 3, 4, 40.00, 40.00, 'Paid'),\n",
            "(124, 11, 2, 4, 25.00, 9.55, 'Pending'),\n",
            "(532, 45, 3, 4, 40.00, 0.00, 'Late');\n",
            "\n",
            "\n",
            "INSERT INTO BillingRecord (BillID, CustomerID, PlanID, TimeID, AmountDue, AmountPaid, PaymentStatus) VALUES\n",
            "(299, 25, 3, 11, 40.00, 19.71, 'Pending'),\n",
            "(340, 29, 1, 4, 10.00, 0.00, 'Late'),\n",
            "(16, 2, 2, 4, 25.00, 25.00, 'Paid'),\n",
            "(130, 11, 2, 10, 25.00, 25.00, 'Paid'),\n",
            "(72, 6, 3, 12, 40.00, 13.47, 'Pending'),\n",
            "(116, 10, 3, 8, 40.00, 40.00, 'Paid'),\n",
            "(235, 20, 2, 7, 25.00, 8.78, 'Pending'),\n",
            "(117, 10, 3, 9, 40.00, 40.00, 'Paid'),\n",
            "(181, 16, 1, 1, 10.00, 0.00, 'Late'),\n",
            "(507, 43, 1, 3, 10.00, 0.00, 'Late'),\n",
            "(530, 45, 3, 2, 40.00, 15.00, 'Pending'),\n",
            "(161, 14, 1, 5, 10.00, 10.00, 'Paid'),\n",
            "(462, 39, 3, 6, 40.00, 40.00, 'Paid'),\n",
            "(159, 14, 1, 3, 10.00, 0.00, 'Late'),\n",
            "(586, 49, 1, 10, 10.00, 0.00, 'Late'),\n",
            "(278, 24, 2, 2, 25.00, 25.00, 'Paid'),\n",
            "(81, 7, 3, 9, 40.00, 0.00, 'Late'),\n",
            "(259, 22, 3, 7, 40.00, 0.00, 'Late'),\n",
            "(356, 30, 1, 8, 10.00, 10.00, 'Paid'),\n",
            "(122, 11, 2, 2, 25.00, 25.00, 'Paid');\n",
            "\n",
            "\n"
          ]
        }
      ],
      "source": [
        "import random\n",
        "\n",
        "# Step 1: Setup\n",
        "customers = list(range(1, 51))       # 50 customers\n",
        "time_ids = list(range(1, 13))        # 12 months (Janâ€“Dec)\n",
        "plans = {\n",
        "    1: 10.00,  # Prepaid Basic\n",
        "    2: 25.00,  # Postpaid Standard\n",
        "    3: 40.00   # Unlimited Premium\n",
        "}\n",
        "\n",
        "# Step 2: Seasonality behavior (Jan, Jun, Dec more late payments)\n",
        "seasonal_trends = {\n",
        "    1: {'Late': 0.4, 'Pending': 0.3, 'Paid': 0.3},\n",
        "    6: {'Late': 0.3, 'Pending': 0.4, 'Paid': 0.3},\n",
        "    12: {'Late': 0.4, 'Pending': 0.3, 'Paid': 0.3}\n",
        "}\n",
        "default_trend = {'Paid': 0.6, 'Pending': 0.2, 'Late': 0.2}\n",
        "\n",
        "# Step 3: Generate records for each customer and month\n",
        "records = []\n",
        "bill_id = 1\n",
        "for customer_id in customers:\n",
        "    plan_id = random.choice(list(plans.keys()))\n",
        "    amount_due = plans[plan_id]\n",
        "\n",
        "    for time_id in time_ids:\n",
        "        trend = seasonal_trends.get(time_id, default_trend)\n",
        "        status = random.choices(\n",
        "            population=list(trend.keys()),\n",
        "            weights=list(trend.values()),\n",
        "            k=1\n",
        "        )[0]\n",
        "\n",
        "        if status == 'Paid':\n",
        "            amount_paid = amount_due\n",
        "        elif status == 'Pending':\n",
        "            amount_paid = round(random.uniform(0.3, 0.8) * amount_due, 2)\n",
        "        else:  # Late\n",
        "            amount_paid = 0.00\n",
        "\n",
        "        # Create SQL-compatible record string\n",
        "        records.append(\n",
        "            f\"({bill_id}, {customer_id}, {plan_id}, {time_id}, {amount_due:.2f}, {amount_paid:.2f}, '{status}')\"\n",
        "        )\n",
        "        bill_id += 1\n",
        "\n",
        "sampled_records = random.sample(records, 120)\n",
        "chunks = [sampled_records[i:i + 50] for i in range(0, len(sampled_records), 50)]\n",
        "insert_statements = [\n",
        "    \"INSERT INTO BillingRecord (BillID, CustomerID, PlanID, TimeID, AmountDue, AmountPaid, PaymentStatus) VALUES\\n\" +\n",
        "    \",\\n\".join(chunk) + \";\"\n",
        "    for chunk in chunks]\n",
        "\n",
        "for stmt in insert_statements:\n",
        "    print(stmt)\n",
        "    print(\"\\n\")"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Sample data for SupportTicket"
      ],
      "metadata": {
        "id": "GVhkR8YFasMP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "import json\n",
        "from datetime import datetime, timedelta\n",
        "\n",
        "\n",
        "## Create the necessary lists to use later in the random selection:\n",
        "    #Generate interaction history for Json type\n",
        "\n",
        "    #create the response bank\n",
        "    # create the response bank\n",
        "customer_openings = [\n",
        "        \"No signal since morning.\",\n",
        "        \"I was charged twice.\",\n",
        "        \"My plan does not work abroad.\",\n",
        "        \"Data usage is incorrect.\",\n",
        "        \"Can not log into the app.\"\n",
        "]\n",
        "\n",
        "agent_responses = [\n",
        "        \"We are following some troubleshoot steps: please restart your device.\",\n",
        "        \"We are checking your account activity.\",\n",
        "        \"We will escalate this to our engineering team.\",\n",
        "        \"Thank you for your patience, we are checking in our system.\",\n",
        "        \"Issue has been resolved. Please confirm and re-login.\"\n",
        "]\n",
        "\n",
        "resolutions = [\n",
        "        \"Reset was applied to the line.\",\n",
        "        \"Billing issue was refunded.\",\n",
        "        \"Account access has been restored.\",\n",
        "        \"Temporary outage was resolved.\",\n",
        "        \"New SIM card dispatched.\"\n",
        "]\n",
        "\n",
        "# Support agents\n",
        "support_agents = [2, 4, 6, 9, 12, 15, 18, 21, 23, 25, 27]  # from Employee table\n",
        "issue_types =['Billing Issues', 'Technical Support', 'Account access', 'Data issues', 'Roaming inquiries', 'New service']\n",
        "channels = ['Phone', 'App', 'Email', 'In-Person']\n",
        "time_ids = list(range(1, 13))\n",
        "\n",
        "## Case statement to define the customer's branch:\n",
        "def branch_for_customer(customer_id):\n",
        "  if customer_id <= 9: return 101\n",
        "  elif customer_id <= 14: return 102\n",
        "  elif customer_id <= 19: return 201\n",
        "  elif customer_id <= 22: return 301\n",
        "  elif customer_id <= 26: return 302\n",
        "  elif customer_id <= 31: return 401\n",
        "  elif customer_id <= 39: return 501\n",
        "  else: return 502\n",
        "\n",
        "# define Json Interaction function:\n",
        "def generate_interaction_json(issue_type, channel, customer_openings, agent_responses, resolutions):\n",
        "    now = datetime(2025, random.randint(1, 12), random.randint(1, 28), random.randint(9, 17), random.randint(0, 59))\n",
        "\n",
        "    messages = []\n",
        "\n",
        "    # Customer message\n",
        "    cust_msg = random.choice(customer_openings)\n",
        "    messages.append({\"time\": now.isoformat(), \"Customer issue\": cust_msg})\n",
        "\n",
        "    now += timedelta(minutes=random.randint(5, 15))\n",
        "    agent_msg = random.choice(agent_responses)\n",
        "    messages.append({\"time\": now.isoformat(), \"Agent Response\": agent_msg})\n",
        "\n",
        "    # Final resolution\n",
        "    now += timedelta(minutes=random.randint(20, 150))\n",
        "    res_msg = random.choice(resolutions) + f\" Confirmed via {channel}.\"\n",
        "    messages.append({\"time\": now.isoformat(), \"Resolution\": res_msg})\n",
        "\n",
        "    return json.dumps({\"messages\": messages})\n",
        "\n",
        "\n",
        "# Ticket records generation:\n",
        "records =[]\n",
        "for ticket_id in range(1,101):\n",
        "    customer_id = random.randint(1,50)\n",
        "    branch_id = branch_for_customer(customer_id)\n",
        "    employee_id = random.choice(support_agents)\n",
        "    issue_type = random.choice(issue_types)\n",
        "    channel = random.choice(channels)\n",
        "    time_id = random.choice(time_ids)\n",
        "    resolution_time = random.randint(5,180)  #simulated resolution time in minutes\n",
        "\n",
        "\n",
        "   # Satisfaction drops with longer resolution\n",
        "    satisfaction = 5 if resolution_time < 90 else random.randint(1,4)\n",
        "\n",
        "    # Generate interaction history for Json\n",
        "    interaction_json = generate_interaction_json(issue_type, channel, customer_openings, agent_responses, resolutions)\n",
        "    records.append(\n",
        "        f\"({ticket_id}, {customer_id}, {branch_id}, {employee_id}, {time_id}, \" +\n",
        "        f\"'{issue_type}', '{channel}', {resolution_time}, {satisfaction}, \" +\n",
        "        f\"'{interaction_json}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)\"\n",
        "    )\n",
        "chunks = [records[i:i + 50] for i in range(0, len(records), 50)]\n",
        "insert_statements = [\n",
        "    \"INSERT INTO SupportTicket (TicketID, CustomerID, BranchID, EmployeeID, TimeID, IssueType, Channel, ResolutionTime, CustomerSatisfaction, InteractionHistory, createdAt, updatedAt) VALUES\\n\" +\n",
        "    \",\\n\".join(chunk) + \";\"\n",
        "    for chunk in chunks\n",
        "]\n",
        "\n",
        "# Print them out\n",
        "for stmt in insert_statements:\n",
        "    print(stmt)\n",
        "    print(\"\\n\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "wLGkiK9tawMI",
        "outputId": "18e19ccc-9678-462f-eaa7-e0c2898e4b54"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "INSERT INTO SupportTicket (TicketID, CustomerID, BranchID, EmployeeID, TimeID, IssueType, Channel, ResolutionTime, CustomerSatisfaction, InteractionHistory, createdAt, updatedAt) VALUES\n",
            "(1, 19, 201, 2, 8, 'Roaming inquiries', 'Phone', 110, 2, '{\"messages\": [{\"time\": \"2025-03-15T16:55:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-03-15T17:02:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-03-15T17:40:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(2, 47, 502, 12, 6, 'Account access', 'Email', 53, 5, '{\"messages\": [{\"time\": \"2025-04-08T15:39:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-04-08T15:44:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-04-08T17:25:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(3, 6, 101, 6, 8, 'Data issues', 'App', 136, 1, '{\"messages\": [{\"time\": \"2025-12-06T11:41:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-12-06T11:47:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-12-06T13:07:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(4, 36, 501, 6, 12, 'Roaming inquiries', 'Email', 163, 3, '{\"messages\": [{\"time\": \"2025-02-08T11:33:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-02-08T11:38:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-02-08T13:19:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(5, 6, 101, 15, 10, 'New service', 'Phone', 38, 5, '{\"messages\": [{\"time\": \"2025-03-09T15:15:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-03-09T15:22:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-03-09T16:17:00\", \"Resolution\": \"Account access has been restored. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(6, 45, 502, 18, 11, 'Technical Support', 'In-Person', 70, 5, '{\"messages\": [{\"time\": \"2025-11-27T13:32:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-11-27T13:47:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-11-27T15:24:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(7, 4, 101, 18, 2, 'Technical Support', 'Email', 129, 1, '{\"messages\": [{\"time\": \"2025-02-14T15:49:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-02-14T16:04:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-02-14T18:17:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(8, 31, 401, 27, 6, 'Technical Support', 'Email', 164, 3, '{\"messages\": [{\"time\": \"2025-07-09T15:55:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-07-09T16:05:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-07-09T18:23:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(9, 1, 101, 9, 9, 'Roaming inquiries', 'Email', 149, 1, '{\"messages\": [{\"time\": \"2025-12-01T09:09:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-12-01T09:21:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-12-01T11:20:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(10, 17, 201, 27, 3, 'New service', 'Email', 64, 5, '{\"messages\": [{\"time\": \"2025-04-20T13:23:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-04-20T13:28:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-04-20T14:09:00\", \"Resolution\": \"Account access has been restored. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(11, 49, 502, 15, 9, 'Data issues', 'Email', 14, 5, '{\"messages\": [{\"time\": \"2025-09-06T11:42:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-09-06T11:47:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-09-06T12:28:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(12, 29, 401, 2, 1, 'Account access', 'App', 58, 5, '{\"messages\": [{\"time\": \"2025-04-13T09:30:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-04-13T09:42:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-04-13T11:12:00\", \"Resolution\": \"Account access has been restored. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(13, 1, 101, 4, 9, 'Data issues', 'Email', 88, 5, '{\"messages\": [{\"time\": \"2025-07-07T17:38:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-07-07T17:48:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-07-07T20:03:00\", \"Resolution\": \"Account access has been restored. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(14, 6, 101, 15, 12, 'Technical Support', 'Email', 31, 5, '{\"messages\": [{\"time\": \"2025-06-07T13:48:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-06-07T14:03:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-06-07T15:26:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(15, 43, 502, 25, 8, 'Roaming inquiries', 'Phone', 170, 2, '{\"messages\": [{\"time\": \"2025-04-08T11:23:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-04-08T11:30:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-04-08T12:33:00\", \"Resolution\": \"Account access has been restored. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(16, 35, 501, 9, 8, 'Data issues', 'Email', 166, 2, '{\"messages\": [{\"time\": \"2025-03-07T13:58:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-03-07T14:06:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-03-07T16:14:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(17, 20, 301, 2, 3, 'Data issues', 'Email', 5, 5, '{\"messages\": [{\"time\": \"2025-05-14T09:04:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-05-14T09:11:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-05-14T09:59:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(18, 35, 501, 12, 1, 'Account access', 'Email', 136, 4, '{\"messages\": [{\"time\": \"2025-01-23T17:17:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-01-23T17:28:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-01-23T19:27:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(19, 7, 101, 21, 4, 'Data issues', 'App', 169, 1, '{\"messages\": [{\"time\": \"2025-04-15T12:05:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-04-15T12:19:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-04-15T13:59:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(20, 23, 302, 6, 10, 'New service', 'In-Person', 15, 5, '{\"messages\": [{\"time\": \"2025-09-14T10:05:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-09-14T10:15:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-09-14T12:36:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(21, 18, 201, 4, 6, 'Roaming inquiries', 'App', 138, 4, '{\"messages\": [{\"time\": \"2025-01-19T12:41:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-01-19T12:51:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-01-19T14:44:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(22, 11, 102, 6, 4, 'Roaming inquiries', 'App', 62, 5, '{\"messages\": [{\"time\": \"2025-12-22T13:14:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-12-22T13:26:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-12-22T13:57:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(23, 24, 302, 23, 9, 'Technical Support', 'App', 147, 1, '{\"messages\": [{\"time\": \"2025-04-23T15:26:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-04-23T15:31:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-04-23T17:47:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(24, 30, 401, 12, 6, 'New service', 'In-Person', 91, 4, '{\"messages\": [{\"time\": \"2025-10-23T16:52:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-10-23T16:57:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-10-23T18:06:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(25, 24, 302, 15, 5, 'New service', 'App', 174, 1, '{\"messages\": [{\"time\": \"2025-04-13T11:30:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-04-13T11:40:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-04-13T12:04:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(26, 10, 102, 2, 4, 'Billing Issues', 'Phone', 12, 5, '{\"messages\": [{\"time\": \"2025-03-16T10:34:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-03-16T10:49:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-03-16T11:24:00\", \"Resolution\": \"Account access has been restored. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(27, 1, 101, 18, 10, 'Account access', 'In-Person', 154, 4, '{\"messages\": [{\"time\": \"2025-03-08T17:04:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-03-08T17:14:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-03-08T18:31:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(28, 33, 501, 4, 2, 'Technical Support', 'In-Person', 90, 2, '{\"messages\": [{\"time\": \"2025-08-25T11:05:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-08-25T11:20:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-08-25T13:44:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(29, 9, 101, 15, 7, 'Billing Issues', 'Email', 169, 4, '{\"messages\": [{\"time\": \"2025-08-19T10:58:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-08-19T11:13:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-08-19T13:12:00\", \"Resolution\": \"Account access has been restored. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(30, 38, 501, 2, 3, 'New service', 'Email', 66, 5, '{\"messages\": [{\"time\": \"2025-02-06T17:22:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-02-06T17:36:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-02-06T19:34:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(31, 33, 501, 6, 9, 'New service', 'Email', 130, 3, '{\"messages\": [{\"time\": \"2025-05-09T11:26:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-05-09T11:32:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-05-09T11:57:00\", \"Resolution\": \"Account access has been restored. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(32, 18, 201, 21, 3, 'Technical Support', 'In-Person', 153, 3, '{\"messages\": [{\"time\": \"2025-11-08T13:32:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-11-08T13:47:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-11-08T16:17:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(33, 23, 302, 6, 9, 'New service', 'Phone', 16, 5, '{\"messages\": [{\"time\": \"2025-06-13T09:13:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-06-13T09:19:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-06-13T09:58:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(34, 44, 502, 21, 3, 'Data issues', 'Email', 173, 3, '{\"messages\": [{\"time\": \"2025-11-03T17:36:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-11-03T17:43:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-11-03T19:09:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(35, 4, 101, 21, 11, 'Billing Issues', 'In-Person', 163, 1, '{\"messages\": [{\"time\": \"2025-01-16T16:12:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-01-16T16:21:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-01-16T18:46:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(36, 30, 401, 6, 7, 'Roaming inquiries', 'Email', 24, 5, '{\"messages\": [{\"time\": \"2025-07-04T15:01:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-07-04T15:13:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-07-04T16:27:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(37, 29, 401, 12, 12, 'Roaming inquiries', 'Email', 140, 3, '{\"messages\": [{\"time\": \"2025-11-09T14:22:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-11-09T14:29:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-11-09T16:24:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(38, 35, 501, 6, 6, 'Roaming inquiries', 'Email', 78, 5, '{\"messages\": [{\"time\": \"2025-05-19T09:23:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-05-19T09:38:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-05-19T12:02:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(39, 12, 102, 25, 12, 'Technical Support', 'Email', 76, 5, '{\"messages\": [{\"time\": \"2025-08-01T10:13:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-08-01T10:25:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-08-01T11:29:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(40, 47, 502, 12, 9, 'Technical Support', 'Phone', 97, 4, '{\"messages\": [{\"time\": \"2025-10-06T17:00:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-10-06T17:11:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-10-06T18:44:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(41, 12, 102, 12, 7, 'Billing Issues', 'App', 45, 5, '{\"messages\": [{\"time\": \"2025-12-22T09:22:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-12-22T09:36:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-12-22T11:45:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(42, 12, 102, 27, 7, 'Technical Support', 'Phone', 41, 5, '{\"messages\": [{\"time\": \"2025-01-07T11:19:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-01-07T11:30:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-01-07T12:54:00\", \"Resolution\": \"Account access has been restored. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(43, 30, 401, 23, 9, 'Billing Issues', 'Email', 37, 5, '{\"messages\": [{\"time\": \"2025-11-20T15:11:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-11-20T15:22:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-11-20T17:41:00\", \"Resolution\": \"Account access has been restored. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(44, 10, 102, 18, 5, 'Data issues', 'Phone', 154, 1, '{\"messages\": [{\"time\": \"2025-01-14T16:11:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-01-14T16:26:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-01-14T18:01:00\", \"Resolution\": \"Account access has been restored. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(45, 1, 101, 6, 7, 'New service', 'Email', 52, 5, '{\"messages\": [{\"time\": \"2025-12-25T11:48:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-12-25T11:59:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-12-25T14:27:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(46, 22, 301, 25, 12, 'New service', 'Email', 121, 3, '{\"messages\": [{\"time\": \"2025-01-22T09:35:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-01-22T09:42:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-01-22T11:09:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(47, 21, 301, 21, 2, 'Data issues', 'Phone', 91, 2, '{\"messages\": [{\"time\": \"2025-12-02T13:20:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-12-02T13:32:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-12-02T14:02:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(48, 24, 302, 2, 6, 'Technical Support', 'Email', 72, 5, '{\"messages\": [{\"time\": \"2025-06-09T09:09:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-06-09T09:17:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-06-09T11:38:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(49, 1, 101, 27, 5, 'Account access', 'In-Person', 139, 4, '{\"messages\": [{\"time\": \"2025-06-09T14:22:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-06-09T14:27:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-06-09T16:04:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(50, 24, 302, 2, 11, 'Roaming inquiries', 'App', 80, 5, '{\"messages\": [{\"time\": \"2025-06-28T10:23:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-06-28T10:35:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-06-28T11:22:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);\n",
            "\n",
            "\n",
            "INSERT INTO SupportTicket (TicketID, CustomerID, BranchID, EmployeeID, TimeID, IssueType, Channel, ResolutionTime, CustomerSatisfaction, InteractionHistory, createdAt, updatedAt) VALUES\n",
            "(51, 23, 302, 2, 4, 'Roaming inquiries', 'In-Person', 111, 1, '{\"messages\": [{\"time\": \"2025-10-24T09:20:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-10-24T09:28:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-10-24T11:48:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(52, 28, 401, 9, 8, 'New service', 'Email', 92, 4, '{\"messages\": [{\"time\": \"2025-09-16T15:18:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-09-16T15:25:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-09-16T16:19:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(53, 46, 502, 21, 8, 'Roaming inquiries', 'Phone', 32, 5, '{\"messages\": [{\"time\": \"2025-01-01T15:29:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-01-01T15:40:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-01-01T16:34:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(54, 23, 302, 4, 10, 'Account access', 'Phone', 174, 3, '{\"messages\": [{\"time\": \"2025-10-02T14:58:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-10-02T15:08:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-10-02T17:13:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(55, 39, 501, 6, 12, 'Technical Support', 'In-Person', 121, 1, '{\"messages\": [{\"time\": \"2025-01-23T13:47:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-01-23T14:00:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-01-23T16:09:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(56, 30, 401, 21, 11, 'Data issues', 'Email', 44, 5, '{\"messages\": [{\"time\": \"2025-02-05T15:09:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-02-05T15:20:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-02-05T17:10:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(57, 47, 502, 23, 4, 'Billing Issues', 'Phone', 60, 5, '{\"messages\": [{\"time\": \"2025-06-05T16:32:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-06-05T16:44:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-06-05T18:20:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(58, 29, 401, 15, 7, 'New service', 'Email', 108, 1, '{\"messages\": [{\"time\": \"2025-06-01T16:32:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-06-01T16:40:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-06-01T18:34:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(59, 16, 201, 25, 7, 'New service', 'Email', 115, 3, '{\"messages\": [{\"time\": \"2025-02-18T09:46:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-02-18T09:54:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-02-18T12:08:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(60, 9, 101, 18, 11, 'Account access', 'In-Person', 9, 5, '{\"messages\": [{\"time\": \"2025-01-08T12:30:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-01-08T12:44:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-01-08T13:04:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(61, 5, 101, 21, 8, 'New service', 'Email', 103, 4, '{\"messages\": [{\"time\": \"2025-01-12T10:33:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-01-12T10:47:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-01-12T12:49:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(62, 45, 502, 9, 3, 'Account access', 'Email', 168, 4, '{\"messages\": [{\"time\": \"2025-10-07T12:27:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-10-07T12:40:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-10-07T13:30:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(63, 11, 102, 9, 11, 'Roaming inquiries', 'Email', 61, 5, '{\"messages\": [{\"time\": \"2025-01-13T11:37:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-01-13T11:48:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-01-13T13:07:00\", \"Resolution\": \"Account access has been restored. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(64, 49, 502, 4, 3, 'New service', 'Email', 66, 5, '{\"messages\": [{\"time\": \"2025-10-21T13:36:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-10-21T13:46:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-10-21T16:04:00\", \"Resolution\": \"Account access has been restored. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(65, 42, 502, 2, 7, 'Billing Issues', 'In-Person', 42, 5, '{\"messages\": [{\"time\": \"2025-12-25T09:14:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-12-25T09:20:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-12-25T10:23:00\", \"Resolution\": \"Account access has been restored. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(66, 11, 102, 25, 12, 'Data issues', 'App', 5, 5, '{\"messages\": [{\"time\": \"2025-12-24T17:33:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-12-24T17:47:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-12-24T19:07:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(67, 11, 102, 23, 2, 'Technical Support', 'Phone', 92, 1, '{\"messages\": [{\"time\": \"2025-12-18T11:48:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-12-18T11:59:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-12-18T13:26:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(68, 45, 502, 9, 2, 'Technical Support', 'In-Person', 22, 5, '{\"messages\": [{\"time\": \"2025-01-25T10:09:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-01-25T10:18:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-01-25T12:03:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(69, 21, 301, 23, 11, 'Billing Issues', 'Email', 40, 5, '{\"messages\": [{\"time\": \"2025-03-02T15:06:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-03-02T15:16:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-03-02T17:26:00\", \"Resolution\": \"Account access has been restored. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(70, 13, 102, 23, 1, 'New service', 'Phone', 123, 1, '{\"messages\": [{\"time\": \"2025-04-10T12:18:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-04-10T12:24:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-04-10T14:17:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(71, 8, 101, 2, 11, 'Account access', 'In-Person', 47, 5, '{\"messages\": [{\"time\": \"2025-02-11T12:16:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-02-11T12:21:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-02-11T12:53:00\", \"Resolution\": \"Account access has been restored. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(72, 37, 501, 9, 11, 'Data issues', 'Phone', 137, 3, '{\"messages\": [{\"time\": \"2025-04-14T12:41:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-04-14T12:54:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-04-14T14:13:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(73, 10, 102, 4, 4, 'Account access', 'Phone', 88, 5, '{\"messages\": [{\"time\": \"2025-12-18T10:47:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-12-18T10:55:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-12-18T11:45:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(74, 8, 101, 4, 4, 'Roaming inquiries', 'Email', 45, 5, '{\"messages\": [{\"time\": \"2025-09-08T12:08:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-09-08T12:18:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-09-08T13:16:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(75, 40, 502, 21, 4, 'Data issues', 'Phone', 157, 3, '{\"messages\": [{\"time\": \"2025-05-03T11:47:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-05-03T12:00:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-05-03T14:22:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(76, 1, 101, 9, 6, 'Technical Support', 'Phone', 124, 4, '{\"messages\": [{\"time\": \"2025-02-18T15:01:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-02-18T15:11:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-02-18T15:56:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(77, 28, 401, 2, 7, 'New service', 'Phone', 91, 4, '{\"messages\": [{\"time\": \"2025-04-14T10:36:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-04-14T10:48:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-04-14T11:16:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(78, 25, 302, 18, 10, 'New service', 'Phone', 52, 5, '{\"messages\": [{\"time\": \"2025-09-27T14:45:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-09-27T14:54:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-09-27T16:57:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(79, 1, 101, 23, 9, 'Billing Issues', 'Phone', 57, 5, '{\"messages\": [{\"time\": \"2025-11-02T11:43:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-11-02T11:56:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-11-02T13:34:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(80, 21, 301, 12, 1, 'Account access', 'In-Person', 129, 2, '{\"messages\": [{\"time\": \"2025-10-13T15:14:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-10-13T15:23:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-10-13T16:53:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(81, 36, 501, 9, 4, 'Billing Issues', 'Phone', 147, 2, '{\"messages\": [{\"time\": \"2025-07-17T12:17:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-07-17T12:26:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-07-17T13:43:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(82, 25, 302, 12, 11, 'Data issues', 'Email', 94, 1, '{\"messages\": [{\"time\": \"2025-07-17T13:00:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-07-17T13:06:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-07-17T13:48:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(83, 48, 502, 21, 4, 'New service', 'In-Person', 123, 1, '{\"messages\": [{\"time\": \"2025-03-02T11:18:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-03-02T11:31:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-03-02T12:56:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(84, 45, 502, 6, 6, 'Roaming inquiries', 'App', 115, 3, '{\"messages\": [{\"time\": \"2025-09-11T11:26:00\", \"Customer issue\": \"My plan does not work abroad.\"}, {\"time\": \"2025-09-11T11:36:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-09-11T12:08:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(85, 23, 302, 4, 3, 'Billing Issues', 'Phone', 42, 5, '{\"messages\": [{\"time\": \"2025-05-27T11:40:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-05-27T11:46:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-05-27T12:32:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(86, 28, 401, 6, 8, 'Account access', 'Phone', 68, 5, '{\"messages\": [{\"time\": \"2025-02-05T09:00:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-02-05T09:08:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-02-05T11:09:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(87, 37, 501, 18, 9, 'Data issues', 'Email', 24, 5, '{\"messages\": [{\"time\": \"2025-01-10T15:23:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-01-10T15:33:00\", \"Agent Response\": \"We are following some troubleshoot steps: please restart your device.\"}, {\"time\": \"2025-01-10T17:47:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(88, 21, 301, 9, 12, 'Data issues', 'App', 64, 5, '{\"messages\": [{\"time\": \"2025-08-06T09:05:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-08-06T09:11:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-08-06T09:56:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(89, 45, 502, 6, 1, 'Roaming inquiries', 'App', 87, 5, '{\"messages\": [{\"time\": \"2025-10-01T15:48:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-10-01T15:55:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-10-01T17:06:00\", \"Resolution\": \"Account access has been restored. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(90, 7, 101, 25, 12, 'Technical Support', 'Phone', 104, 4, '{\"messages\": [{\"time\": \"2025-07-21T14:45:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-07-21T14:51:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-07-21T15:20:00\", \"Resolution\": \"Account access has been restored. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(91, 7, 101, 18, 7, 'Account access', 'In-Person', 106, 2, '{\"messages\": [{\"time\": \"2025-01-01T17:11:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-01-01T17:25:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-01-01T18:15:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(92, 23, 302, 4, 11, 'Account access', 'In-Person', 106, 1, '{\"messages\": [{\"time\": \"2025-11-05T13:11:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-11-05T13:25:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-11-05T14:41:00\", \"Resolution\": \"New SIM card dispatched. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(93, 16, 201, 9, 12, 'Data issues', 'App', 109, 4, '{\"messages\": [{\"time\": \"2025-02-25T14:35:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-02-25T14:47:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-02-25T15:55:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via App.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(94, 45, 502, 6, 12, 'Technical Support', 'In-Person', 24, 5, '{\"messages\": [{\"time\": \"2025-02-10T14:34:00\", \"Customer issue\": \"Data usage is incorrect.\"}, {\"time\": \"2025-02-10T14:39:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-02-10T15:28:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(95, 43, 502, 6, 12, 'Billing Issues', 'In-Person', 110, 4, '{\"messages\": [{\"time\": \"2025-11-27T15:16:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-11-27T15:21:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-11-27T17:25:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(96, 31, 401, 4, 12, 'New service', 'In-Person', 164, 1, '{\"messages\": [{\"time\": \"2025-10-10T13:48:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-10-10T13:57:00\", \"Agent Response\": \"We are checking your account activity.\"}, {\"time\": \"2025-10-10T15:33:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(97, 12, 102, 2, 10, 'Billing Issues', 'Email', 126, 4, '{\"messages\": [{\"time\": \"2025-07-20T13:12:00\", \"Customer issue\": \"No signal since morning.\"}, {\"time\": \"2025-07-20T13:27:00\", \"Agent Response\": \"Thank you for your patience, we are checking in our system.\"}, {\"time\": \"2025-07-20T15:08:00\", \"Resolution\": \"Temporary outage was resolved. Confirmed via Email.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(98, 50, 502, 2, 9, 'Technical Support', 'Phone', 163, 4, '{\"messages\": [{\"time\": \"2025-08-24T16:14:00\", \"Customer issue\": \"I was charged twice.\"}, {\"time\": \"2025-08-24T16:21:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-08-24T17:00:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via Phone.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(99, 46, 502, 25, 5, 'Account access', 'In-Person', 100, 4, '{\"messages\": [{\"time\": \"2025-06-27T16:05:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-06-27T16:16:00\", \"Agent Response\": \"We will escalate this to our engineering team.\"}, {\"time\": \"2025-06-27T18:44:00\", \"Resolution\": \"Billing issue was refunded. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(100, 12, 102, 15, 4, 'Account access', 'In-Person', 104, 4, '{\"messages\": [{\"time\": \"2025-09-25T10:19:00\", \"Customer issue\": \"Can not log into the app.\"}, {\"time\": \"2025-09-25T10:32:00\", \"Agent Response\": \"Issue has been resolved. Please confirm and re-login.\"}, {\"time\": \"2025-09-25T11:32:00\", \"Resolution\": \"Reset was applied to the line. Confirmed via In-Person.\"}]}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Sample data for UsageRecord"
      ],
      "metadata": {
        "id": "scOt9uE4Y-cm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "## Start with plan configuration scheme: Data is defined in GB\n",
        "plan_usage_limits = {\n",
        "    1: {\"data\": 5, \"sms\": 50, \"voice\": 100},    # Prepaid Basic #DataGB\n",
        "    2: {\"data\": 15, \"sms\": 200, \"voice\": 400},  # Postpaid Standard\n",
        "    3: {\"data\": 50, \"sms\": 1000, \"voice\": 1000} # Unlimited Premium\n",
        "}\n",
        "\n",
        "customers = list(range(1, 51))\n",
        "time_ids = list(range(1, 13))\n",
        "\n",
        "#Define Usage ID variable to increment it each time the loop runs:\n",
        "usage_id = 1\n",
        "usage_record= []\n",
        "\n",
        "#Start the loop\n",
        "for customer_id in customers:\n",
        "  plan_id = random.randint(1,3)\n",
        "\n",
        "  ## Define the monthly limit\n",
        "  for time_id in time_ids:\n",
        "      limits = plan_usage_limits[plan_id]\n",
        "\n",
        "      #Seasonality boost to improve query insights:\n",
        "\n",
        "      boost= 1.4 if time_id in [6,7,12] else 1.0\n",
        "\n",
        "      # define the data usage:\n",
        "      data_used = round(random.uniform(0.3, limits[\"data\"]) * boost, 2)\n",
        "      sms_used = round(random.uniform(0.2, limits[\"sms\"]) * boost, 2)\n",
        "      voice_used = round(random.uniform(0.3, limits[\"voice\"]) * boost, 2)\n",
        "\n",
        "      ## Apend the data generated\n",
        "      usage_record.append(\n",
        "          f\"({usage_id}, {customer_id}, {plan_id}, {time_id}, {data_used}, {sms_used}, {voice_used}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)\"\n",
        "      )\n",
        "      usage_id += 1\n",
        "\n",
        "## Stablish a limit of 120 records to generate:\n",
        "sample_records = random.sample(usage_record, 120)\n",
        "\n",
        "# define the chuncks\n",
        "chunks2 = [sample_records[i:i + 50] for i in range(0, len(sample_records), 50)]\n",
        "\n",
        "## Generate the SQL text to paste it into the code:\n",
        "insert_statements2 = [\n",
        "    \"INSERT INTO UsageRecord (UsageID, CustomerID, PlanID, TimeID, DataUsedGB, SMSUsed, VoiceMinutesUsed, createdAt, updatedAt) VALUES \\n\" +\n",
        "    \",\\n\".join(chunk) + \";\"\n",
        "    for chunk  in chunks2\n",
        "]\n",
        "\n",
        "# Print them out\n",
        "for stmt in insert_statements2:\n",
        "    print(stmt)\n",
        "    print(\"\\n\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "77cXYFOQZE5T",
        "outputId": "3d57d82a-9d97-4c6d-97aa-60b8997808df"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "INSERT INTO UsageRecord (UsageID, CustomerID, PlanID, TimeID, DataUsedGB, SMSUsed, VoiceMinutesUsed, createdAt, updatedAt) VALUES \n",
            "(478, 40, 2, 10, 3.6, 11.91, 324.44, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(515, 43, 2, 11, 1.12, 89.74, 364.86, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(295, 25, 1, 7, 1.06, 64.28, 37.01, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(228, 19, 2, 12, 0.43, 74.27, 247.97, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(54, 5, 2, 6, 19.66, 45.55, 499.49, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(436, 37, 3, 4, 43.65, 56.48, 60.24, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(72, 6, 1, 12, 0.5, 31.32, 42.39, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(474, 40, 2, 6, 4.36, 159.12, 215.8, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(317, 27, 1, 5, 3.38, 24.4, 60.46, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(181, 16, 1, 1, 0.7, 27.36, 94.97, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(367, 31, 3, 7, 23.15, 634.19, 357.22, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(432, 36, 2, 12, 15.54, 81.84, 485.54, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(359, 30, 2, 11, 7.0, 114.27, 77.42, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(580, 49, 1, 4, 0.61, 33.87, 91.26, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(503, 42, 2, 11, 5.08, 130.86, 379.89, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(232, 20, 1, 4, 4.67, 8.26, 15.96, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(288, 24, 3, 12, 13.27, 95.75, 1138.71, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(597, 50, 1, 9, 0.44, 16.63, 4.74, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(124, 11, 2, 4, 1.25, 76.62, 73.22, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(126, 11, 2, 6, 1.37, 166.63, 112.79, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(108, 9, 1, 12, 4.88, 13.33, 76.22, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(273, 23, 3, 9, 0.77, 701.88, 664.31, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(287, 24, 3, 11, 9.38, 961.26, 315.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(289, 25, 1, 1, 4.45, 40.1, 64.77, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(487, 41, 2, 7, 13.24, 229.04, 313.31, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(342, 29, 1, 6, 3.38, 34.38, 114.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(378, 32, 3, 6, 11.73, 853.62, 142.4, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(259, 22, 2, 7, 19.12, 270.15, 107.87, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(55, 5, 2, 7, 11.82, 137.98, 551.09, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(593, 50, 1, 5, 2.69, 18.25, 24.64, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(142, 12, 1, 10, 2.84, 48.08, 5.67, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(598, 50, 1, 10, 0.89, 43.55, 33.2, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(151, 13, 3, 7, 8.49, 906.59, 666.58, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(263, 22, 2, 11, 6.75, 99.85, 136.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(217, 19, 2, 1, 8.16, 110.14, 58.97, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(64, 6, 1, 4, 3.82, 14.66, 82.64, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(106, 9, 1, 10, 2.71, 38.42, 46.69, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(225, 19, 2, 9, 11.23, 89.25, 83.79, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(409, 35, 1, 1, 0.84, 13.84, 98.48, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(449, 38, 3, 5, 6.88, 750.43, 76.65, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(17, 2, 2, 5, 13.91, 77.11, 300.46, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(173, 15, 1, 5, 1.22, 0.46, 88.82, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(249, 21, 3, 9, 48.28, 492.33, 605.3, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(109, 10, 1, 1, 3.11, 35.78, 3.94, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(206, 18, 1, 2, 2.45, 31.8, 6.18, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(585, 49, 1, 9, 3.41, 39.53, 5.38, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(345, 29, 1, 9, 0.5, 20.81, 24.4, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(565, 48, 2, 1, 14.43, 59.94, 267.17, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(135, 12, 1, 3, 4.13, 44.73, 82.97, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(252, 21, 3, 12, 51.94, 1201.05, 1354.66, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);\n",
            "\n",
            "\n",
            "INSERT INTO UsageRecord (UsageID, CustomerID, PlanID, TimeID, DataUsedGB, SMSUsed, VoiceMinutesUsed, createdAt, updatedAt) VALUES \n",
            "(406, 34, 2, 10, 8.35, 85.69, 137.53, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(76, 7, 2, 4, 11.89, 105.63, 111.79, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(226, 19, 2, 10, 6.61, 8.17, 220.39, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(346, 29, 1, 10, 3.94, 45.93, 8.69, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(545, 46, 2, 5, 7.13, 89.26, 375.68, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(130, 11, 2, 10, 13.06, 93.42, 204.6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(340, 29, 1, 4, 4.1, 30.98, 52.14, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(469, 40, 2, 1, 0.48, 102.5, 85.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(334, 28, 1, 10, 0.31, 26.0, 20.89, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(541, 46, 2, 1, 10.32, 103.87, 13.86, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(313, 27, 1, 1, 3.22, 35.18, 20.34, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(116, 10, 1, 8, 3.93, 1.46, 38.39, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(183, 16, 1, 3, 2.87, 2.12, 46.07, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(27, 3, 2, 3, 5.0, 89.83, 162.31, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(105, 9, 1, 9, 1.81, 34.52, 70.91, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(551, 46, 2, 11, 8.37, 177.81, 29.69, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(149, 13, 3, 5, 33.77, 536.79, 393.42, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(302, 26, 1, 2, 4.46, 43.97, 40.47, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(177, 15, 1, 9, 4.14, 19.98, 60.14, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(110, 10, 1, 2, 4.1, 26.56, 69.64, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(583, 49, 1, 7, 1.02, 54.11, 18.54, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(526, 44, 3, 10, 3.78, 825.49, 343.82, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(69, 6, 1, 9, 1.0, 26.49, 71.32, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(452, 38, 3, 8, 48.63, 321.74, 629.06, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(278, 24, 3, 2, 1.26, 825.09, 106.44, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(383, 32, 3, 11, 49.27, 824.72, 588.32, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(525, 44, 3, 9, 38.61, 633.43, 83.1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(258, 22, 2, 6, 2.08, 21.52, 331.87, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(573, 48, 2, 9, 1.75, 144.82, 197.11, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(513, 43, 2, 9, 2.32, 156.91, 209.72, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(420, 35, 1, 12, 4.67, 11.72, 53.77, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(519, 44, 3, 3, 6.62, 411.56, 926.13, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(401, 34, 2, 5, 11.97, 103.47, 244.6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(125, 11, 2, 5, 0.76, 60.28, 286.8, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(209, 18, 1, 5, 1.34, 4.23, 44.34, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(2, 1, 2, 2, 3.11, 168.32, 295.83, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(592, 50, 1, 4, 0.4, 33.68, 52.82, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(163, 14, 1, 7, 4.11, 35.72, 16.85, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(114, 10, 1, 6, 3.86, 56.78, 45.21, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(298, 25, 1, 10, 4.02, 29.18, 4.38, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(245, 21, 3, 5, 35.61, 844.09, 579.39, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(521, 44, 3, 5, 25.89, 120.37, 871.89, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(179, 15, 1, 11, 0.43, 14.14, 1.67, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(250, 21, 3, 10, 18.39, 770.81, 25.8, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(500, 42, 2, 8, 13.62, 3.61, 358.18, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(584, 49, 1, 8, 4.62, 20.82, 68.51, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(111, 10, 1, 3, 4.4, 12.18, 28.73, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(578, 49, 1, 2, 3.91, 19.79, 26.02, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(180, 15, 1, 12, 1.51, 44.88, 93.56, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(38, 4, 3, 2, 2.01, 141.37, 304.16, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);\n",
            "\n",
            "\n",
            "INSERT INTO UsageRecord (UsageID, CustomerID, PlanID, TimeID, DataUsedGB, SMSUsed, VoiceMinutesUsed, createdAt, updatedAt) VALUES \n",
            "(197, 17, 2, 5, 9.14, 71.14, 157.97, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(490, 41, 2, 10, 12.71, 41.71, 278.13, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(451, 38, 3, 7, 6.34, 1161.47, 29.79, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(89, 8, 3, 5, 14.33, 255.79, 916.4, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(373, 32, 3, 1, 12.97, 924.68, 542.9, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(331, 28, 1, 7, 2.3, 13.84, 79.65, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(546, 46, 2, 6, 16.06, 233.04, 435.51, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(433, 37, 3, 1, 22.67, 257.41, 216.06, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(275, 23, 3, 11, 41.67, 260.7, 805.85, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(510, 43, 2, 6, 5.75, 275.38, 418.81, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(53, 5, 2, 5, 3.96, 78.76, 318.61, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(297, 25, 1, 9, 1.96, 42.37, 53.57, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(569, 48, 2, 5, 9.15, 106.46, 242.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(329, 28, 1, 5, 4.07, 20.08, 42.49, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(166, 14, 1, 10, 1.04, 41.22, 2.44, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(224, 19, 2, 8, 12.27, 74.88, 378.18, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(189, 16, 1, 9, 3.95, 25.19, 75.74, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(99, 9, 1, 3, 4.17, 8.96, 89.34, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(524, 44, 3, 8, 47.24, 771.55, 327.87, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(307, 26, 1, 7, 1.97, 65.0, 113.41, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Sample Data for ProcessLog âœ’"
      ],
      "metadata": {
        "id": "xHFkTCIenlyN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "process_types = ['Billing', 'Activation', 'Support', 'PlanChange']\n",
        "status_choices = ['Completed', 'Failed', 'In-Progress']\n",
        "\n",
        "log_id = 1\n",
        "log_records = []\n",
        "def branch_for_customer(customer_id):\n",
        "  if customer_id <= 9: return 101\n",
        "  elif customer_id <= 14: return 102\n",
        "  elif customer_id <= 19: return 201\n",
        "  elif customer_id <= 22: return 301\n",
        "  elif customer_id <= 26: return 302\n",
        "  elif customer_id <= 31: return 401\n",
        "  elif customer_id <= 39: return 501\n",
        "  else: return 502\n",
        "\n",
        "for _ in range(120):\n",
        "    customer_id = random.randint(1, 50)\n",
        "    branch_id = branch_for_customer(customer_id)\n",
        "    process_type= random.choice(process_types)\n",
        "    status = random.choices(\n",
        "        population=status_choices, weights=[0.8, 0.05, 0.15], k=1\n",
        "\n",
        "    )[0]\n",
        "\n",
        "    # Generate random datetime in 2025\n",
        "    start_dt = datetime.strptime(f\"2025-{random.randint(1,12):02d}-{random.randint(1,28):02d} {random.randint(0,23):02d}:{random.randint(0,59):02d}:00\", \"%Y-%m-%d %H:%M:%S\")\n",
        "    duration = random.randint(60, 7200)  # 1 minute to 2 hours\n",
        "    end_dt = start_dt + timedelta(seconds=duration)\n",
        "\n",
        "    log_records.append(\n",
        "        f\"({log_id}, '{process_type}', {customer_id}, {branch_id}, \" +\n",
        "        f\"'{start_dt.strftime('%Y-%m-%d %H:%M:%S')}', \" +\n",
        "        f\"'{end_dt.strftime('%Y-%m-%d %H:%M:%S')}', {duration}, \" +\n",
        "        f\"'{status}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)\"\n",
        "    )\n",
        "    log_id += 1\n",
        "\n",
        "chunks3 = [log_records[i:i + 50] for i in range(0, len(log_records), 50)]\n",
        "insert_statements3 = [\n",
        "    \"INSERT INTO ProcessLog (LogID, ProcessType, CustomerID, BranchID, StartTime, EndTime, DurationSec, Status, createdAt, updatedAt) VALUES \\n\" +\n",
        "    \",\\n\".join(chunk) + \";\"\n",
        "    for chunk  in chunks3\n",
        "]\n",
        "\n",
        "# Print them out\n",
        "for stm in insert_statements3:\n",
        "    print(stm)\n",
        "    print(\"\\n\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "RIpZswf0npau",
        "outputId": "0cfaafeb-381e-4ed1-9018-b10cdf2baa90"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "INSERT INTO ProcessLog (LogID, ProcessType, CustomerID, BranchID, StartTime, EndTime, DurationSec, Status, createdAt, updatedAt) VALUES \n",
            "(1, 'Billing', 29, 401, '2025-08-12 18:53:00', '2025-08-12 20:08:50', 4550, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(2, 'Billing', 8, 101, '2025-06-26 11:56:00', '2025-06-26 12:16:36', 1236, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(3, 'PlanChange', 3, 101, '2025-12-08 04:19:00', '2025-12-08 06:09:49', 6649, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(4, 'PlanChange', 12, 102, '2025-04-21 09:13:00', '2025-04-21 09:52:49', 2389, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(5, 'PlanChange', 45, 502, '2025-01-15 07:51:00', '2025-01-15 09:32:23', 6083, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(6, 'PlanChange', 20, 301, '2025-12-18 22:40:00', '2025-12-18 22:48:52', 532, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(7, 'Activation', 24, 302, '2025-04-05 14:58:00', '2025-04-05 16:00:55', 3775, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(8, 'Activation', 4, 101, '2025-09-20 09:19:00', '2025-09-20 11:05:01', 6361, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(9, 'Activation', 46, 502, '2025-12-15 05:23:00', '2025-12-15 05:44:25', 1285, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(10, 'Support', 15, 201, '2025-01-14 00:18:00', '2025-01-14 01:52:54', 5694, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(11, 'Support', 42, 502, '2025-10-27 11:41:00', '2025-10-27 12:31:30', 3030, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(12, 'Support', 32, 501, '2025-08-13 22:17:00', '2025-08-14 00:12:57', 6957, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(13, 'Activation', 30, 401, '2025-09-04 02:43:00', '2025-09-04 04:06:04', 4984, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(14, 'Support', 46, 502, '2025-09-04 04:12:00', '2025-09-04 05:48:29', 5789, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(15, 'Billing', 29, 401, '2025-01-07 09:40:00', '2025-01-07 11:30:40', 6640, 'Failed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(16, 'Support', 20, 301, '2025-03-09 19:39:00', '2025-03-09 20:28:22', 2962, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(17, 'Billing', 1, 101, '2025-06-21 18:19:00', '2025-06-21 19:43:20', 5060, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(18, 'Support', 4, 101, '2025-10-04 03:57:00', '2025-10-04 05:27:10', 5410, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(19, 'Activation', 13, 102, '2025-06-12 11:57:00', '2025-06-12 13:29:29', 5549, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(20, 'Activation', 26, 302, '2025-02-27 02:49:00', '2025-02-27 04:06:25', 4645, 'Failed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(21, 'Activation', 8, 101, '2025-02-17 10:40:00', '2025-02-17 11:25:02', 2702, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(22, 'Billing', 44, 502, '2025-07-15 20:18:00', '2025-07-15 22:07:42', 6582, 'Failed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(23, 'Billing', 8, 101, '2025-06-01 06:11:00', '2025-06-01 07:35:43', 5083, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(24, 'Support', 37, 501, '2025-11-09 18:33:00', '2025-11-09 20:24:01', 6661, 'Failed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(25, 'Activation', 15, 201, '2025-01-07 00:20:00', '2025-01-07 01:23:04', 3784, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(26, 'Activation', 7, 101, '2025-10-11 18:43:00', '2025-10-11 18:46:40', 220, 'Failed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(27, 'Support', 2, 101, '2025-11-28 14:48:00', '2025-11-28 15:06:55', 1135, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(28, 'Support', 41, 502, '2025-04-25 07:29:00', '2025-04-25 08:22:40', 3220, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(29, 'Billing', 17, 201, '2025-12-03 14:41:00', '2025-12-03 16:26:13', 6313, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(30, 'PlanChange', 21, 301, '2025-01-20 08:28:00', '2025-01-20 09:03:14', 2114, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(31, 'PlanChange', 8, 101, '2025-05-17 00:07:00', '2025-05-17 01:17:37', 4237, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(32, 'Activation', 16, 201, '2025-10-04 12:41:00', '2025-10-04 14:16:15', 5715, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(33, 'PlanChange', 21, 301, '2025-03-08 11:22:00', '2025-03-08 11:55:21', 2001, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(34, 'Support', 7, 101, '2025-09-01 18:21:00', '2025-09-01 19:51:53', 5453, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(35, 'Billing', 31, 401, '2025-09-10 23:15:00', '2025-09-11 01:01:40', 6400, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(36, 'PlanChange', 48, 502, '2025-06-26 16:27:00', '2025-06-26 17:08:09', 2469, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(37, 'PlanChange', 1, 101, '2025-03-15 07:02:00', '2025-03-15 08:04:18', 3738, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(38, 'Support', 5, 101, '2025-03-17 11:29:00', '2025-03-17 13:10:02', 6062, 'Failed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(39, 'Support', 41, 502, '2025-07-06 05:16:00', '2025-07-06 05:22:24', 384, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(40, 'Billing', 48, 502, '2025-02-03 01:52:00', '2025-02-03 01:54:22', 142, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(41, 'PlanChange', 34, 501, '2025-08-04 08:35:00', '2025-08-04 09:53:58', 4738, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(42, 'Support', 22, 301, '2025-05-20 02:44:00', '2025-05-20 04:32:16', 6496, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(43, 'Activation', 5, 101, '2025-06-01 14:52:00', '2025-06-01 15:49:31', 3451, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(44, 'Billing', 36, 501, '2025-01-19 22:49:00', '2025-01-19 23:54:34', 3934, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(45, 'Support', 27, 401, '2025-01-26 13:29:00', '2025-01-26 15:17:16', 6496, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(46, 'Activation', 48, 502, '2025-10-04 19:34:00', '2025-10-04 20:18:03', 2643, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(47, 'PlanChange', 5, 101, '2025-08-01 22:08:00', '2025-08-01 22:34:32', 1592, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(48, 'Support', 17, 201, '2025-11-23 07:43:00', '2025-11-23 08:12:01', 1741, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(49, 'PlanChange', 17, 201, '2025-08-19 01:20:00', '2025-08-19 02:54:33', 5673, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(50, 'Support', 36, 501, '2025-09-07 16:24:00', '2025-09-07 18:02:58', 5938, 'Failed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);\n",
            "\n",
            "\n",
            "INSERT INTO ProcessLog (LogID, ProcessType, CustomerID, BranchID, StartTime, EndTime, DurationSec, Status, createdAt, updatedAt) VALUES \n",
            "(51, 'Billing', 14, 102, '2025-07-18 16:48:00', '2025-07-18 17:53:28', 3928, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(52, 'Activation', 10, 102, '2025-01-26 13:49:00', '2025-01-26 15:40:03', 6663, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(53, 'PlanChange', 14, 102, '2025-10-26 16:38:00', '2025-10-26 18:34:05', 6965, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(54, 'Activation', 27, 401, '2025-08-28 04:35:00', '2025-08-28 05:16:04', 2464, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(55, 'Billing', 39, 501, '2025-11-10 05:50:00', '2025-11-10 06:36:01', 2761, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(56, 'Support', 49, 502, '2025-10-09 17:17:00', '2025-10-09 18:28:57', 4317, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(57, 'PlanChange', 28, 401, '2025-10-23 02:50:00', '2025-10-23 03:19:49', 1789, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(58, 'Billing', 48, 502, '2025-06-16 19:03:00', '2025-06-16 19:30:50', 1670, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(59, 'PlanChange', 24, 302, '2025-10-22 01:42:00', '2025-10-22 02:10:58', 1738, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(60, 'Support', 19, 201, '2025-10-03 03:28:00', '2025-10-03 04:46:40', 4720, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(61, 'Billing', 19, 201, '2025-06-15 11:03:00', '2025-06-15 11:52:46', 2986, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(62, 'Billing', 28, 401, '2025-06-27 14:06:00', '2025-06-27 15:10:37', 3877, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(63, 'PlanChange', 33, 501, '2025-09-09 14:54:00', '2025-09-09 15:41:01', 2821, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(64, 'Billing', 33, 501, '2025-03-19 20:53:00', '2025-03-19 21:02:30', 570, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(65, 'Support', 40, 502, '2025-01-18 09:01:00', '2025-01-18 09:04:39', 219, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(66, 'Activation', 15, 201, '2025-02-23 05:54:00', '2025-02-23 06:34:50', 2450, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(67, 'Support', 39, 501, '2025-02-11 14:06:00', '2025-02-11 14:22:17', 977, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(68, 'Billing', 32, 501, '2025-05-23 12:30:00', '2025-05-23 12:42:21', 741, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(69, 'Billing', 50, 502, '2025-10-10 16:33:00', '2025-10-10 17:53:20', 4820, 'Failed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(70, 'Support', 4, 101, '2025-06-07 18:44:00', '2025-06-07 19:06:48', 1368, 'Failed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(71, 'Billing', 7, 101, '2025-03-08 08:10:00', '2025-03-08 09:28:08', 4688, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(72, 'PlanChange', 22, 301, '2025-04-24 03:38:00', '2025-04-24 04:14:10', 2170, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(73, 'Billing', 43, 502, '2025-03-22 17:32:00', '2025-03-22 18:40:31', 4111, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(74, 'Activation', 31, 401, '2025-05-09 07:33:00', '2025-05-09 09:22:08', 6548, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(75, 'Activation', 24, 302, '2025-03-25 21:45:00', '2025-03-25 22:51:08', 3968, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(76, 'PlanChange', 34, 501, '2025-12-16 10:33:00', '2025-12-16 10:47:54', 894, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(77, 'Billing', 37, 501, '2025-10-27 06:31:00', '2025-10-27 07:44:23', 4403, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(78, 'Support', 30, 401, '2025-10-02 14:54:00', '2025-10-02 16:42:25', 6505, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(79, 'Support', 41, 502, '2025-11-02 20:59:00', '2025-11-02 21:17:35', 1115, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(80, 'Billing', 2, 101, '2025-02-03 04:57:00', '2025-02-03 06:13:27', 4587, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(81, 'Activation', 2, 101, '2025-08-07 18:52:00', '2025-08-07 19:11:16', 1156, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(82, 'Activation', 22, 301, '2025-10-06 12:30:00', '2025-10-06 14:19:18', 6558, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(83, 'Billing', 13, 102, '2025-07-27 06:37:00', '2025-07-27 08:15:38', 5918, 'Failed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(84, 'Support', 34, 501, '2025-05-22 12:53:00', '2025-05-22 13:39:25', 2785, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(85, 'Support', 13, 102, '2025-05-28 09:10:00', '2025-05-28 09:40:18', 1818, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(86, 'PlanChange', 48, 502, '2025-01-21 09:31:00', '2025-01-21 10:47:32', 4592, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(87, 'Support', 50, 502, '2025-12-23 10:38:00', '2025-12-23 11:45:54', 4074, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(88, 'Activation', 24, 302, '2025-05-18 17:28:00', '2025-05-18 18:40:22', 4342, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(89, 'PlanChange', 7, 101, '2025-04-20 06:14:00', '2025-04-20 07:13:50', 3590, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(90, 'Support', 46, 502, '2025-03-08 17:45:00', '2025-03-08 18:27:53', 2573, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(91, 'Support', 38, 501, '2025-01-17 18:29:00', '2025-01-17 20:14:59', 6359, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(92, 'Support', 34, 501, '2025-01-10 12:19:00', '2025-01-10 13:48:26', 5366, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(93, 'Activation', 46, 502, '2025-07-11 22:08:00', '2025-07-11 23:43:32', 5732, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(94, 'PlanChange', 27, 401, '2025-12-08 05:14:00', '2025-12-08 06:31:03', 4623, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(95, 'Support', 44, 502, '2025-01-27 16:52:00', '2025-01-27 17:30:09', 2289, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(96, 'Support', 28, 401, '2025-07-23 03:02:00', '2025-07-23 03:29:35', 1655, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(97, 'PlanChange', 2, 101, '2025-08-03 07:44:00', '2025-08-03 08:20:30', 2190, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(98, 'Support', 23, 302, '2025-05-02 17:09:00', '2025-05-02 17:22:46', 826, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(99, 'Billing', 2, 101, '2025-04-23 17:42:00', '2025-04-23 18:09:23', 1643, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(100, 'Billing', 20, 301, '2025-03-09 09:02:00', '2025-03-09 10:20:33', 4713, 'Failed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);\n",
            "\n",
            "\n",
            "INSERT INTO ProcessLog (LogID, ProcessType, CustomerID, BranchID, StartTime, EndTime, DurationSec, Status, createdAt, updatedAt) VALUES \n",
            "(101, 'PlanChange', 9, 101, '2025-08-17 02:33:00', '2025-08-17 04:12:44', 5984, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(102, 'Billing', 46, 502, '2025-05-23 15:10:00', '2025-05-23 15:41:34', 1894, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(103, 'Activation', 28, 401, '2025-04-04 07:03:00', '2025-04-04 07:19:41', 1001, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(104, 'Billing', 42, 502, '2025-07-24 17:42:00', '2025-07-24 18:28:34', 2794, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(105, 'PlanChange', 7, 101, '2025-05-19 08:27:00', '2025-05-19 09:53:08', 5168, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(106, 'Support', 28, 401, '2025-02-26 13:40:00', '2025-02-26 15:14:49', 5689, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(107, 'PlanChange', 50, 502, '2025-11-09 09:21:00', '2025-11-09 10:43:19', 4939, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(108, 'PlanChange', 47, 502, '2025-10-12 04:41:00', '2025-10-12 05:19:20', 2300, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(109, 'Activation', 26, 302, '2025-07-01 10:29:00', '2025-07-01 11:07:03', 2283, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(110, 'Activation', 41, 502, '2025-01-21 11:49:00', '2025-01-21 13:20:54', 5514, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(111, 'Billing', 25, 302, '2025-09-28 14:06:00', '2025-09-28 15:30:47', 5087, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(112, 'Billing', 16, 201, '2025-02-15 01:50:00', '2025-02-15 03:11:42', 4902, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(113, 'Support', 37, 501, '2025-10-20 22:29:00', '2025-10-20 22:33:27', 267, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(114, 'Activation', 12, 102, '2025-10-16 13:55:00', '2025-10-16 15:00:51', 3951, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(115, 'Billing', 6, 101, '2025-01-27 08:17:00', '2025-01-27 10:12:38', 6938, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(116, 'PlanChange', 49, 502, '2025-03-12 22:59:00', '2025-03-13 00:11:38', 4358, 'In-Progress', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(117, 'PlanChange', 22, 301, '2025-08-20 00:44:00', '2025-08-20 00:59:57', 957, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(118, 'Activation', 39, 501, '2025-08-03 02:52:00', '2025-08-03 04:15:56', 5036, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(119, 'PlanChange', 1, 101, '2025-07-20 00:46:00', '2025-07-20 02:20:14', 5654, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(120, 'Support', 38, 501, '2025-08-08 18:35:00', '2025-08-08 19:57:13', 4933, 'Completed', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data Sample Generation for Target Revenue"
      ],
      "metadata": {
        "id": "BrN7-ODYu4OW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "branches = [101, 102, 201, 301, 302, 401, 501, 502]\n",
        "plans = {\n",
        "    1: 10.00,\n",
        "    2: 25.00,\n",
        "    3: 40.00\n",
        "}\n",
        "seasonal_multiplier = {\n",
        "    1: 1.05,  # Jan\n",
        "    2: 1.00,\n",
        "    3: 1.00,\n",
        "    4: 1.00,\n",
        "    5: 1.00,\n",
        "    6: 1.00,\n",
        "    7: 1.02,  # July (Q3)\n",
        "    8: 1.02,  # Aug\n",
        "    9: 1.03,  # Sept\n",
        "    10: 1.00,\n",
        "    11: 1.00,\n",
        "    12: 1.02  # Dec\n",
        "}\n",
        "\n",
        "revenue_records = []\n",
        "target_id = 1\n",
        "for branch_id in branches:\n",
        "    for plan_id, base_fee in plans.items():\n",
        "        for time_id in range(1, 13):\n",
        "            multiplier = seasonal_multiplier[time_id]\n",
        "            expected_customers = random.randint(1,3) if plan_id != 3 else random.randint(0, 2)\n",
        "            monthly_target = round(base_fee * expected_customers * multiplier, 2)\n",
        "\n",
        "            revenue_records.append(\n",
        "                f\"({target_id}, {branch_id}, {plan_id}, {time_id}, {monthly_target}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)\"\n",
        "            )\n",
        "            target_id += 1\n",
        "sample_revenue_records = random.sample(revenue_records, 120)\n",
        "chunks4 = [sample_revenue_records[i:i + 50] for i in range(0, len(sample_revenue_records), 50)]\n",
        "insert_statements4 = [\n",
        "    \"INSERT INTO RevenueTarget (TargetID, BranchID, PlanID, TimeID, MonthlyTarget, createdAt, updatedAt) VALUES\\n\" +\n",
        "    \",\\n\".join(chunk) + \";\"\n",
        "    for chunk in chunks4\n",
        "]\n",
        "\n",
        "# You can print them like this:\n",
        "for stmt in insert_statements4:\n",
        "    print(stmt)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "KhSEkIb3u-hj",
        "outputId": "28a4960b-ca75-42eb-935b-a2785769f293"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "INSERT INTO RevenueTarget (TargetID, BranchID, PlanID, TimeID, MonthlyTarget, createdAt, updatedAt) VALUES\n",
            "(102, 201, 3, 6, 40.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(144, 301, 3, 12, 0.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(179, 302, 3, 11, 40.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(165, 302, 2, 9, 51.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(134, 301, 3, 2, 40.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(210, 401, 3, 6, 40.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(137, 301, 3, 5, 80.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(135, 301, 3, 3, 80.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(2, 101, 1, 2, 30.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(276, 502, 2, 12, 76.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(282, 502, 3, 6, 80.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(159, 302, 2, 3, 25.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(16, 101, 2, 4, 50.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(57, 102, 2, 9, 77.25, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(142, 301, 3, 10, 80.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(32, 101, 3, 8, 40.8, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(283, 502, 3, 7, 40.8, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(254, 502, 1, 2, 10.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(75, 201, 1, 3, 10.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(285, 502, 3, 9, 41.2, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(147, 302, 1, 3, 10.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(230, 501, 2, 2, 75.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(80, 201, 1, 8, 30.6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(219, 501, 1, 3, 30.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(269, 502, 2, 5, 25.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(187, 401, 1, 7, 30.6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(58, 102, 2, 10, 25.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(61, 102, 3, 1, 84.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(42, 102, 1, 6, 20.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(265, 502, 2, 1, 26.25, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(236, 501, 2, 8, 76.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(222, 501, 1, 6, 20.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(268, 502, 2, 4, 25.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(161, 302, 2, 5, 25.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(27, 101, 3, 3, 40.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(172, 302, 3, 4, 0.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(220, 501, 1, 4, 30.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(84, 201, 1, 12, 20.4, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(162, 302, 2, 6, 75.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(64, 102, 3, 4, 0.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(250, 501, 3, 10, 80.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(76, 201, 1, 4, 10.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(30, 101, 3, 6, 80.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(37, 102, 1, 1, 31.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(67, 102, 3, 7, 81.6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(133, 301, 3, 1, 0.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(47, 102, 1, 11, 20.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(164, 302, 2, 8, 25.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(44, 102, 1, 8, 10.2, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(120, 301, 1, 12, 30.6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);\n",
            "INSERT INTO RevenueTarget (TargetID, BranchID, PlanID, TimeID, MonthlyTarget, createdAt, updatedAt) VALUES\n",
            "(256, 502, 1, 4, 30.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(274, 502, 2, 10, 50.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(169, 302, 3, 1, 42.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(253, 502, 1, 1, 10.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(261, 502, 1, 9, 10.3, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(249, 501, 3, 9, 0.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(151, 302, 1, 7, 30.6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(168, 302, 2, 12, 25.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(62, 102, 3, 2, 40.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(63, 102, 3, 3, 0.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(9, 101, 1, 9, 20.6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(110, 301, 1, 2, 10.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(206, 401, 3, 2, 40.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(13, 101, 2, 1, 26.25, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(96, 201, 2, 12, 51.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(233, 501, 2, 5, 25.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(49, 102, 2, 1, 52.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(50, 102, 2, 2, 25.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(204, 401, 2, 12, 51.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(114, 301, 1, 6, 20.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(43, 102, 1, 7, 20.4, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(231, 501, 2, 3, 25.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(79, 201, 1, 7, 30.6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(104, 201, 3, 8, 81.6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(234, 501, 2, 6, 50.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(106, 201, 3, 10, 0.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(48, 102, 1, 12, 10.2, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(171, 302, 3, 3, 40.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(55, 102, 2, 7, 25.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(5, 101, 1, 5, 30.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(197, 401, 2, 5, 25.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(19, 101, 2, 7, 25.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(199, 401, 2, 7, 76.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(68, 102, 3, 8, 40.8, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(226, 501, 1, 10, 20.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(177, 302, 3, 9, 0.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(257, 502, 1, 5, 20.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(26, 101, 3, 2, 80.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(190, 401, 1, 10, 10.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(191, 401, 1, 11, 10.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(245, 501, 3, 5, 40.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(18, 101, 2, 6, 25.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(195, 401, 2, 3, 25.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(119, 301, 1, 11, 30.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(115, 301, 1, 7, 10.2, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(141, 301, 3, 9, 0.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(196, 401, 2, 4, 75.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(140, 301, 3, 8, 40.8, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(143, 301, 3, 11, 80.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(237, 501, 2, 9, 25.75, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);\n",
            "INSERT INTO RevenueTarget (TargetID, BranchID, PlanID, TimeID, MonthlyTarget, createdAt, updatedAt) VALUES\n",
            "(193, 401, 2, 1, 26.25, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(275, 502, 2, 11, 25.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(20, 101, 2, 8, 25.5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(149, 302, 1, 5, 10.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(82, 201, 1, 10, 30.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(69, 102, 3, 9, 82.4, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(154, 302, 1, 10, 10.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(126, 301, 2, 6, 25.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(212, 401, 3, 8, 81.6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(288, 502, 3, 12, 40.8, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(240, 501, 2, 12, 51.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(103, 201, 3, 7, 81.6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(87, 201, 2, 3, 75.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(225, 501, 1, 9, 20.6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(113, 301, 1, 5, 20.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(81, 201, 1, 9, 10.3, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(3, 101, 1, 3, 30.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(184, 401, 1, 4, 30.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(70, 102, 3, 10, 0.0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),\n",
            "(189, 401, 1, 9, 30.9, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);\n"
          ]
        }
      ]
    }
  ]
}